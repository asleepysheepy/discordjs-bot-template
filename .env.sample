# The token to use when authenticating the bot with discord
# Check the link below for more information
# https://discordjs.guide/preparations/setting-up-a-bot-application.html
# 
# Example:
# BOT_TOKEN="NzkyNzE1NDU0MTk2MDg4ODQy.X-hvzA.Ovy4MCQywSkoMRRclStW4xAYK7I"
BOT_TOKEN=""

# A list of discord snowflakes of users allowed to deploy commands.
# This list should only consist of extremely trusted people like the
# bot owner and bot administrators.
# 
# Example:
# USERS_WHO_CAN_DEPLOY=["164905596460466176","164905777159602176"]
USERS_WHO_CAN_DEPLOY=[]

# The username your bot should use when connecting to the database.
# 
# Note: You only need to set this envvar in development as docker uses it
# when initially creating the database.
# 
# Example:
# POSTGRES_USER="my_bot_user"
POSTGRES_USER=""

# The password your bot should use when connecting to the database.
# 
# Note: You only need to set this envvar in development as docker uses it
# when initially creating the database.
# 
# Example:
# POSTGRES_PASSWORD="my_database_users_password"
POSTGRES_PASSWORD=""

# The name of the database your bot should connect to.
# 
# Note: You only need to set this envvar in development as docker uses it
# when initially creating the database.
# 
# Example:
# POSTGRES_DB="my_bot_database"
POSTGRES_DB=""

# The connection string the bot should use to connect to the database.
# This string contains all the information the bot will need to know in order to
# connect to the database.
# 
# Note: You must set this in both production and development
# 
# Example:
# POSTGRES_CONNECTION_STRING="postgres://my_bot_user:my_database_users_password@localhost:5432/my_bot_database"
POSTGRES_CONNECTION_STRING=""
